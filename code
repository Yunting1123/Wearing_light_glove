//     The value output from the analog sensor is used to set the threshold, 
//   which fades from yellow-green to red depending on the value from low to high, 
//   and when the threshold reaches the maximum and is maintained for a certain period of time, 
//   it starts to turn into white and purple flashes.

#include <Adafruit_NeoPixel.h>

#define PIN            1   // A1
#define NUMPIXELS      12  // 12 led lights
Adafruit_NeoPixel pixels = Adafruit_NeoPixel(NUMPIXELS, PIN, NEO_GRB + NEO_KHZ800);

const int sensorPin = 10; // pin A10
int sensorValue = 0;      
unsigned long transitionStartTime = 0; // record the time of sensor changing
bool isTransitioning = false;          // changing or not

void setup() {
  pixels.begin();
  Serial.begin(9600);
}

void setColor(uint8_t red, uint8_t green, uint8_t blue) {
  uint32_t color = pixels.Color(red, green, blue);
  for (int i = 0; i < NUMPIXELS; i++) {
    pixels.setPixelColor(i, color);
  }
  pixels.show();
}

void loop() {
  sensorValue = analogRead(sensorPin);
  Serial.println(sensorValue);

  if (sensorValue >= 725 && !isTransitioning) {
    transitionStartTime = millis();
    isTransitioning = true;
  } else if (sensorValue < 450) {
    isTransitioning = false;
  }

  if (isTransitioning) {
    unsigned long elapsedTime = millis() - transitionStartTime;

    if (elapsedTime < 5000) {
      // shifting to red
      int redValue = map(elapsedTime, 0, 5000, 0, 255);
      setColor(redValue, 0, 0);
    } else {
      // shifting to purple
      int purpleValue = map(elapsedTime - 5000, 0, 2000, 0, 255);
      setColor(255, purpleValue, 255);
      if (purpleValue >= 255) {
        isTransitioning = false;
      }
    }
  } else {
    if (sensorValue <= 50) {
      setColor(255, 255, 0); 
    } else if (sensorValue >= 725) {
      setColor(255, 0, 0);
    } else {
      int redValue = map(sensorValue, 50, 725, 255, 255);
      int greenValue = map(sensorValue, 50, 725, 255, 0);
      setColor(redValue, greenValue, 0);
    }
  }
}
